<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="company.entity.associationsmappings.unidirectional.one_to_many.jointable.Employee"
        table="EMPLOYEE">
        <meta attribute="class-description"> This class contains the employee detail. </meta>
        <id name="id" type="int" column="id">
            <generator class="native" />
        </id>

        <!--The
        <set> element is new here and has been introduced to set
            the relationship between Certificate and Employee classes-->
        <!--The
        name attribute is set to the defined Set variable in the 
                parent class, in our case it is certificates-->
        <!--We
        used the cascade attribute in the <set> element to tell Hibernate
                to persist the Certificate objects for SAVE i.e. CREATE and UPDATE
                operations at the same time as the Employee objects-->
        <!--table
        attribute is set to the intermediate table EMP_CERT_ONE_TO_MANY.-->
        <set name="certificates" cascade="save-update" table="EMP_CERT_ONE_TO_MANY">
            <!--The
            <key> element is the column in the EMP_CERT table that
                holds the foreign key to the parent object ie. table EMPLOYEE.-->
            <key column="employee_id" />
            <!--The
            <many-to-many> element indicates that one Employee object 
                relates to many Certificate objects and column attribute in EMP_CERT_ONE_TO_MANY
                table holds the foreing key to the Certificate object,ie. table
                CERTIFICATE_WITH_JOIN_TABLE
                Specifying unique="true", changes the multiplicity 
                from many-to-many to one-to-many-->
            <many-to-many column="certificate_id"
                class="company.entity.associationsmappings.unidirectional.one_to_many.jointable.Certificate"
                unique="true" />
        </set>
        <property name="firstName" column="first_name" type="string" />
        <property name="lastName" column="last_name" type="string" />
        <property name="salary" column="salary" type="int" />
    </class>

</hibernate-mapping>