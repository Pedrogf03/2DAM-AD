<?xml version="1.0" encoding="utf-8"?> 
<!DOCTYPE hibernate-mapping PUBLIC 
 "-//Hibernate/Hibernate Mapping DTD//EN" 
 "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping> 
    <class name="company.entity.collectionsmappings.b_set_one_to_many.Employee" table="EMPLOYEE"> 
        <meta attribute="class-description"> This class contains the employee detail. </meta> 
        <id name="id" type="int" column="id"> 
            <generator class="native"/> 
        </id> 
        
        <!--The <set> element is new here and has been introduced to set
            the relationship between Certificate and Employee classes-->
            <!--The name attribute is set to the defined Set variable in the 
                parent class, in our case it is certificates-->
            <!--We used the cascade attribute in the <set> element to tell Hibernate
                to persist the Certificate objects at the same time as the Employee objects.-->
        <set name="certificates" cascade="all"> 
            <!--The <key> element is the column in the CERTIFICATE table that
                holds the foreign key to the parent object ie. table EMPLOYEE.-->
            <key column="employee_id"/> 
            <!--The <one-to-many> element indicates that one Employee object 
                relates to many Certificate objects and, as such, 
                the Certificate object must have a Employee parent associated 
                with it. You can use either <one-to-one>, <many-to-one> or 
                <many-to-many> elements based on your requirement.-->
            <one-to-many class="company.entity.collectionsmappings.b_set_one_to_many.Certificate"/> 
        </set>
        
        <property name="firstName" column="first_name" type="string"/> 
        <property name="lastName" column="last_name" type="string"/> 
        <property name="salary" column="salary" type="int"/> 
    </class> 
    
</hibernate-mapping>

